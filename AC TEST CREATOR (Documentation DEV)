AC TEST CREATOR (Documentation DEV)

Create new test
1. Login as site admin
2. Go To: Test Manager (MENU) > Create Test (Page)
3. Fill out the required fields in Create Test (Page)
	*Assessment Name
	*Assessment Code
	*Drag and drop questions
4. Test Creation Fields Format (1- 4):

	(1)Start Page Marker => This is the start identifier of the test (page1)

		(2)'autocomplete' => Autocomplete inputbox
		(2)'checkbox-group' => Custom Autocomplete inputbox
		(2)'date' => Date inputbox
		(2)'file' => File upload button
		(2)'header' => <h>Header</h>
		(2)'hidden' => Hidden inputbox
		(2)'number' => Number inputbox
		(2)'paragraph' => <p>Paragraph</p>
		(2)'radio-group' => Radio groups (single)
		(2)'select' => Dropdown
		(2)'text' => Text inputbox
		(2)'textarea' => Textarea 
		(2)'starRating' => Star Rating tag using a juery plugin
		(2)'single-answer-template' => Radio group template accepting 1 answer 
		(2)'multiple-answer-template' => Checkbox group template accepting multi answer
		(2)'customHTMLTemplate' => Accepts any custom HTML you want to create.
		
		(3)'button' => Button button | submit | reset		

	(4)End Page Marker => This is the ending identifier of the test (page1)

5. More info on drag and drop fields:

	Start Page Marker => This is the start identifier of the test (page1)
		*Randomize = Yes | No
			"Yes": It will randomize the fields inside Start Page Marker and End Page Marker. (except button field, fixed on the bottom part)

				Example Output:

					(1)Start Page Marker => This is the start identifier of the test (page1)

						(will be in randomized) 'autocomplete' 
						(will be in randomized) 'checkbox-group'
						(will be in randomized) 'date'
						(will be in randomized) 'file'
						(will be in randomized) 'header'
						(will be in randomized) 'hidden'
						(will be in randomized) 'number'
						(will be in randomized) 'paragraph'
						(will be in randomized) 'radio-group'
						(will be in randomized) 'select'
						(will be in randomized) 'text'
						(will be in randomized) 'textarea' 
						(will be in randomized) 'starRating'
						(will be in randomized) 'single-answer-template'
						(will be in randomized) 'multiple-answer-template'
						(will be in randomized) 'customHTMLTemplate'
						(will be in randomized) Other...
						
						(3)'button' => Button button | submit | reset		

					(4)End Page Marker => This is the ending identifier of the test (page1)

			"No": Same as format seen in test creator page.

		*Add Timer (In Minutes) = Add number to set a timer for the page. By default, timer is set to empty or none.
			= Timer can be controlled in the {TestId}Controller using the global function below.

                //initialize a new timer for this test page
                (1)testTimer('init', $this->ass_code, $question_arr['page1'][0]->setTimer); 

                // continue the timer set from the previous test page
		        (2)testTimer('continue', $this->ass_code, 0); 
		        
		        //unset currently active timer
		        (3)testTimer('unset', $this->ass_code, 0); 

		*OnTimesUp (Javascript) = Add a javascript function that will run when the user reached the max time for the test.

			Default Code OnTimesUp: alert("Times up! Your current answers will be submitted"); $("input").prop("required",false);  $("form#test_form").submit();

		*Take Snapshot (Desktop) = Yes | No
			"Yes": It will take snapshot and save the image in public/img/snapshots/

			On the code just use the $this->saveSnapshot(); method


5.1 Question ordering: You can set a "CUSTOM HTML" fixed ordering.
		Question Order: display_top    => display on the top. Use case: test progress bar, test header etc.
		Question Order: display_bottom => display on the bottom. 



-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-


How to create a new question template.

1.1 Add your custom question template to ac_site/public/js/fb_fields_acsite.js

1.2 Inside fb_customFields array object add your custom question template.

	example: 

	{
        type: "customMC2Question",
        required: false,
        label: "Custom MC Multi-Answer",
        className: "form-control",
        access: false,
        value: "",
        attrs: {
            type: 'textarea',
            subtype: 'textarea',
        }
    }

1.3 Next, create the html template of your custom question template

	example:

	customMC2Question:function(fieldData){
        var setDefaultValue = "\n\
        <div class='container'>\n\
            <div class='row custom_mc_row_question'><b>1.Â </b>QUESTION</div>\n\
            <div class='row custom_mc_row'>\n\
                    <label class='custom_mc_container q1'>\n\
                            <input class='custom_mc_checkbox' type='checkbox' name='q1[]' value='1'>\n\
                            Choice 1\n\
                    </label>\n\
            </div>\n\
            <div class='row custom_mc_row'>\n\
                    <label class='custom_mc_container q1'>\n\
                            <input class='custom_mc_checkbox' type='checkbox' name='q1[]' value='2'>\n\
                            Choice 2\n\
                    </label>\n\
            </div>\n\
            <div class='row custom_mc_row'>\n\
                    <label class='custom_mc_container q1'>\n\
                            <input class='custom_mc_checkbox' type='checkbox' name='q1[]' value='3'>\n\
                            Choice 3\n\
                    </label>\n\
            </div>\n\
        </div>";
        var custom_html_value = fieldData.value || setDefaultValue;
        return {
            field: '<textarea style="min-height: 250px;" class="form-control" id="'+fieldData.name+'">'+formatFactory(custom_html_value)+'</textarea>',
            //onRender: function(){
            //}
        }
    }

1.4 If you want to add more attributes to your custom question template just add it into fb_typeUserAttrs.

1.5 The 5th step is to create the javascript file of the newly created custom question template in ac_site/public/js/formbuilder/control_plugins/

	example: Please check customMC2Question.js

1.6 finally after step 5. You need to go back to ac_site/public/js/fb_fields_acsite.js and look for fb_controlOrder then set your desired order of the field for easy access.


-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-

Creating a theme style for your test.

1.1 Create a css file in ac_site/public/css/

	example: ac_site/public/css/ppp2.css

1.2 In your test controller that is ac_site/app/controllers/Ppp2Controller.php, add your "ppp2.css" theme to $html['includeSiteLevelCSS'] array.

	See ac_site/app/controllers/Ppp2Controller.php for your reference.


Note: same step in creating test specific js file, just add it to $html['includeSiteLevelJS'].

-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-

Overwriting css and js files:

















tbtest_items.QuesType

adap_mc   
cd        
ein       
lkr       
mc1 = multiple choice, single answer
	- accr             
	- acct             
	- bea1             
	- bma2             
	- bmaa             
	- cssa             
	- cta1             
	- cta2             
	- cta3             
	- ctr2             
	- ctra             
	- dlt1             
	- gst             
	- mpet             
	- mse             
	- msp             
	- mst             
	- mst1             
	- mst2             
	- msw             
	- mut             
	- pgps             
	- pssa             
	- tdg1           
mc2       
mc3       
mc4       
pti       
rn1       
rn2       
rn3       
scor_mc   
tf1       
tf2       
wh        
yn1       
yn2  